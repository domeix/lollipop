#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{algpseudocode}
\usepackage{algorithm}
%\usepackage{algorithm2e}
\usepackage{listings}

\usepackage{graphicx}
\usepackage{comment}
\usepackage{color}
\usepackage{framed}
\usepackage{tikz}

\definecolor{shadecolor}{gray}{0.875}

\specialcomment{musterloesung}{\begin{shaded}Lösung/Hinweise: }{\end{shaded}}

% Nur exluden nötig. Include automatisch.
\excludecomment{musterloesung}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "ADS Übungsblatt"
\pdf_author "Markus Gumbel"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\branch taschenrechner
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch klassenkopieren
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch baumdarstellung
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch stringliststack
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch inhalt
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch aufwandsabschätzung
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch dyn-datenstruktur
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch listen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch bäume
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch gleichheit-unterbäume
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch Höhe-von-Bäumen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch nimm-spiel
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch heron-verfahren
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch bonbon-glas
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch Alg-Eigenschaften
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch If-Abfragen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch kgV
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch gleiche1u0
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch Bakterienwachstum
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch grammatiken-verstehen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch rekursion-vertiefen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch nullstellensuche
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch hanoi
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch shell-sort
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch suchen-sortieren
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch gas-howto
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch händeschütteln
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch rek-mergesort
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch radixsort
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch weihnachtsmann
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch minHeap
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch fkt-liste
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch dyn-ds
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch listen-bäume
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch hilf-dem-dieb
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch pi-bestimmung
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch pseudo-code-grammatik
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch sum-rekursiv
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch palindrom
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch rek-binarySearch
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch shakersort
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch quicksort-intuitiv
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch aufwand-matrizenmult
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch list-methoden
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch Spirale
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch königreich
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch grammartoo-how-to
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch Nat-Mergesort
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch Methoden
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch Ostern
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\branch Wurzelziehen
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\headheight 2cm
\headsep 0.8cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ADS-Übungstemplate für Lyx 2.1 oder höher.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
blattnr}{42}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
ausgabe}{Mo., 09.01.2017}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
abgabe}{Direkt vor dem Testat}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
testat}{dann und wann}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
semester}{Wintersemester 2016}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
ADS Aufgabenblatt 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
blattnr
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fancyhead{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[CO,CE]{ADS Aufgabenblatt 
\backslash
blattnr}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[LE,LO]{
\backslash
includegraphics[height=1.2cm]{/fig/hsma.png}}
\end_layout

\begin_layout Plain Layout

%
\backslash
fancyhead[LE,LO]{Foo}  geht! graphicx muss eingbunden sein!
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[RE,RO]{Prof.
\backslash
 Dr.
\backslash
 M.
\backslash
 Gumbel
\backslash

\backslash
 
\backslash
tt{m.gumbel@hs-mannheim}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
algrenewcommand{
\backslash
algorithmiccomment}[1]{
\backslash
hfill {
\backslash
scriptsize // #1}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{EndWhile}{
\backslash
textbf{od}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{EndFor}{
\backslash
textbf{od}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{EndIf}{
\backslash
textbf{fi}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{Function}[2]{
\backslash
textbf{funct} #1(#2)}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{EndFunction}{
\backslash
textbf{tcnuf}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{Procedure}[2]{
\backslash
textbf{proc} #1(#2)}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{EndProcedure}{
\backslash
textbf{corp}}
\end_layout

\begin_layout Plain Layout


\backslash
algrenewtext{Comment}[1]{// #1}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch inhalt
status collapsed

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Allgemeine Hinweise
\end_layout

\begin_layout Standard
Dieses Blatt enthält zwei Aufgaben mit Musterlösung.
 Es wurde erstellt für das ADSL-Tutorium im WS 2016 von Dominik Meixner
 (1324227).
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="30text%">
<column alignment="left" valignment="top" width="70text%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausgabe der Übung:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ausgabe
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abgabe:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
abgabe
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Testat am:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
testat
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize
Die Abnahme der Übungen gilt als 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
Prüfungsleistung
\end_layout

\end_inset

.
 Bei einer Verhinderung durch Krankheit ist eine ärztliche Bescheinigung
 der Arbeitsunfähigkeit vorzulegen.
 
\end_layout

\begin_layout Itemize
Geben Sie Ihre Lösung vorab schriftlich beim Dozenten ab.
 Benutzen Sie das im Moodle-Kurs vorgegebene Deckblatt für die Übungen.
 Drucken bzw.
\begin_inset space ~
\end_inset

Schreiben Sie auf jede Seite die Seitenzahl und heften Sie Ihre Ausarbeitung.
 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
Ausarbeitungen in einem anderen Format werden nicht berücksichtigt
\end_layout

\end_inset

.
 Vergessen Sie nicht zu unterschreiben.
\end_layout

\begin_layout Itemize
Während der Abnahme sind die Ergebnisse am Rechner live zu demonstrieren.
 
\end_layout

\begin_layout Itemize
Bei der Abnahme der Übung ist der Studentenausweis vorzulegen.
\end_layout

\begin_layout Subsection*
Lernziele
\end_layout

\begin_layout Standard
\begin_inset Branch dyn-ds
status collapsed

\begin_layout Standard
Dynamische Datenstrukturen kennenlernen
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Branch listen-bäume
status collapsed

\begin_layout Standard
Listen und Bäume vertiefen
\end_layout

\end_inset


\begin_inset Branch suchen-sortieren
status collapsed

\begin_layout Standard
Suchen und Sortieren verstehen.
\end_layout

\end_inset


\begin_inset Branch grammatiken-verstehen
status collapsed

\begin_layout Standard
Grammatiken verstehen und anwenden.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Branch rekursion-vertiefen
status collapsed

\begin_layout Standard
Rekursion vertiefen.
\end_layout

\end_inset


\begin_inset Branch Alg-Eigenschaften
status collapsed

\begin_layout Standard
Terminiert, deterministisch, determiniert unterscheiden können
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Branch If-Abfragen
status collapsed

\begin_layout Standard
If-Abfragen und Schleifen einsetzen können.
 
\end_layout

\end_inset


\begin_inset Branch dyn-datenstruktur
status collapsed

\begin_layout Standard
Dynamische Datenstrukturen kennenlernen
\end_layout

\end_inset


\begin_inset Branch listen
status collapsed

\begin_layout Standard
Kenntnisse über Listen vertiefen
\end_layout

\end_inset


\begin_inset Branch bäume
status collapsed

\begin_layout Standard
Kenntnisse über Bäume vertiefen
\end_layout

\end_inset


\begin_inset Branch aufwandsabschätzung
status collapsed

\begin_layout Standard
Aufwandsabschätzung
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Hinweise zur Bearbeitung
\end_layout

\begin_layout Standard
Vermeiden Sie unterschiedliche Lösungen, wenn ein Algorithmus in verschiedener
 Darstellungsform (Struktogramm, Pseudo-Code, usw.) verlangt ist.
\end_layout

\begin_layout Standard
\begin_inset Branch grammartoo-how-to
status collapsed

\begin_layout Standard
In diesem Übungsblatt wird die Gumbix-Algorithm-Suite verwendet.
 Informationen hierzu finden sich unter 
\begin_inset CommandInset href
LatexCommand href
name "http://www.mi.hs-mannheim.de/gumbel/vorlesungen/ads/gumbix-algorithm-suite/"
target "http://www.mi.hs-mannheim.de/gumbel/vorlesungen/ads/gumbix-algorithm-suite/"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch gas-howto
status collapsed

\begin_layout Standard
In diesem Übungsblatt wird die Gumbix-Algorithm-Suite verwendet.
 Informationen hierzu finden sich unter 
\begin_inset CommandInset href
LatexCommand href
name "http://www.mi.hs-mannheim.de/gumbel/vorlesungen/ads/gumbix-algorithm-suite/"
target "http://www.mi.hs-mannheim.de/gumbel/vorlesungen/ads/gumbix-algorithm-suite/"

\end_inset

.
 Um Ihren eigenen Sortier-Algorithmus mit GAS auszuprobieren, benutzen Sie
 am besten das vorkonfigurierte Eclipse-Projekt gumbix-algorithm-
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
sortext
\end_layout

\end_inset

-1.x.y.zip.
 Im Unterverzeichnis 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
./doc
\end_layout

\end_inset

 ist ein Handbuch zu finden, in dem die weiteren Schritte erklärt werden.
 V.
\begin_inset space ~
\end_inset

a.
\begin_inset space ~
\end_inset

Kapitel 3 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Eclipse package for sorting
\end_layout

\end_inset

 ist hier relevant.
\end_layout

\begin_layout Standard
Die Funktion 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
public void sort(...)
\end_layout

\end_inset

, die in der Gumbix-Algorithm-Suite vorhanden ist, ist eine so genannte
 Methode.
 Reguläre Methoden haben keinen 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
static
\end_layout

\end_inset

-Kennzeichner davor.
 Wenn Sie aus der Sort-Methode heraus neue Funktionen (Methoden) aufrufen
 wollen, sollten diese ebenfalls ohne 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
static
\end_layout

\end_inset

-Kennzeichner sein.
 Fragen Sie Ihren Betreuer für weitere Informationen hierzu.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch klassenkopieren
status open

\begin_layout Standard
In diesem Arbeitsblatt sollen Sie Klassen entwerfen, die auf Klassen beruhen,
 die nicht vollständig ausprogrammiert sind.
 Sie brauchen nur solche Methoden zu implementieren, die zur Lösung der
 Aufgabe wirklich benötigt werden.
 Es kann sinnvoll sein, Sourcecode durch kopieren in einer neuen Klasse
 wiederzuverwenden, Vererbung ist aber auch möglich und erlaubt.
 Den Source-Code finden Sie über die Links im Moodle-Kurs.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch königreich
status collapsed

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
König
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Im Internet gibt es hierzu eine Lösung mit einen König.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bewertungshinweise: Die drei Begriffe sollten unterschieden werden können.
\end_layout

\begin_layout Itemize
rot: Aufgabe nicht gemacht oder kopiert.
 Höchstens eine Teilaufgabe etwas verstanden.
\end_layout

\begin_layout Itemize
gelb: Mind.
\begin_inset space ~
\end_inset

eine Teilaufgabe gut erklärt.
\end_layout

\begin_layout Itemize
grün: Alle Teilaufgaben gut erklärt.hier Grafik
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Kaiserreich eines alten vergesslichen Kaisers erstreckt sich über einige
 Kilometer entlang eines Flusses und ist an jeder Stelle 31 km breit und
 weniger lang, als der Kaiser alt ist.
 Die Länge und Breite des Kaiserreiches sind ganze Zahlen.
 Desweiteren hat der Kaiser einige Erben, und er ist älter als die Anzahl
 seiner Erben, aber noch nicht 111 Jahre.
 Die Anzahl seiner Erben ist größer als die Länge seines Kaiserreichs.
 Der vergessliche Kaiser erinnert sich nur daran, dass das Produkt aus der
 Quadratkilometerzahl seines Kaiserreiches, seines Alters und der Anzahl
 seiner Erben gleich dem Wert seines Schatzes ist.
 Der Wert seines Schatzes ist 1184603 Goldstücke.
 
\end_layout

\begin_layout Standard
Wie alt ist der Kaiser, wie viele Erben hat er und wie lang ist sein Kaiserreich
? Entwickeln Sie einen Algorithmus, der diese Frage beantwortet.
 Überlegen Sie, wie diese Zahlen systematisch bestimmt werden können.
\end_layout

\begin_layout Subsection
Aufgabe: Pseudo-Code
\end_layout

\begin_layout Standard
Helfen Sie dem Kaiser, indem Sie einen Algorithmus im Pseudo-Code hierfür
 entwerfen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aus dem Aufgabentext ist zu entnehmen: Der Kaiser ist keine 111 Jahre alt,
 die Anzahl der Erben sind weniger als das Alter des Kaisers und die Länge
 des Kaiserreichs ist nicht so lang wie die Anzahl der Erben.
 Sagen wir 
\begin_inset Formula $a$
\end_inset

 entspricht dem Alter, 
\begin_inset Formula $e$
\end_inset

 der Anzahl der Erben und 
\begin_inset Formula $l$
\end_inset

 der Länge, dann muss gelten:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
1\leq a<111,\;1\leq e<a\textrm{ und }1\leq l<e
\]

\end_inset


\end_layout

\begin_layout Standard
Der Wert des Schatzes ergibt sich aus Breite 
\begin_inset Formula $b=31$
\end_inset

 des Kaiserreichs mal der Länge des Kaiserreichs mal dem Alter des Kaisers
 und mal der Anzahl der Erben.
 
\begin_inset Formula $(b\cdot l)\cdot e\cdot a=1184603$
\end_inset

.
 Daraus folgt die Gleichung, die wahr sein muss: 
\begin_inset Formula 
\[
l\cdot e\cdot a=(1184603/31)
\]

\end_inset


\end_layout

\begin_layout Standard

\lang american
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithmic}
\end_layout

\begin_layout Plain Layout


\backslash
For{$a$ von 1 bis 111}
\end_layout

\begin_layout Plain Layout

  
\backslash
For{$e$ von 1 bis a}
\end_layout

\begin_layout Plain Layout

    
\backslash
For{$l$ von 1 bis e}
\end_layout

\begin_layout Plain Layout

      
\backslash
If{$l 
\backslash
cdot e 
\backslash
cdot a = (1184603/31)$}
\end_layout

\begin_layout Plain Layout

        
\backslash
State Gib Länge $l$, Erben $e$ und Alter $a$ aus
\end_layout

\begin_layout Plain Layout

      
\backslash
EndIf
\end_layout

\begin_layout Plain Layout

    
\backslash
EndFor
\end_layout

\begin_layout Plain Layout

  
\backslash
EndFor
\end_layout

\begin_layout Plain Layout


\backslash
EndFor
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Pseudo-Code Hilf-Dem-Kaiser}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Struktogramm
\end_layout

\begin_layout Standard
Überführen Sie den Pseudo-Code aus Aufgabe in ein Struktogramm.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
BILD: 
\begin_inset Graphics
	filename fig/faki.png
	scale 70

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Java-Programm
\end_layout

\begin_layout Standard
Schreiben Sie hierfür ein lauffähiges Java-Programm.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true,language=Java,tabsize=4"
inline false
status open

\begin_layout Plain Layout

public class HilfDemKaiser {
\end_layout

\begin_layout Plain Layout

    public static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

        for (int a = 1; a < 111; a++) {
\end_layout

\begin_layout Plain Layout

            for (int e = 1; e < a; e++) {
\end_layout

\begin_layout Plain Layout

                for (int l = 1; l < e; l++) {
\end_layout

\begin_layout Plain Layout

                    if (l * e * a == (1184603 / 31)) {
\end_layout

\begin_layout Plain Layout

                        System.out.println("Länge: " + l + ", Erben: " + e
 + ", Alter: " + a);
\end_layout

\begin_layout Plain Layout

                    }
\end_layout

\begin_layout Plain Layout

                }
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ergibt die Ausgabe
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

Länge: 7, Erben: 53, Alter: 103
\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch Ostern
status open

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Berechnung des Osterdatums
\end_layout

\begin_layout Standard
Ostern ist im Christentum die jährliche Gedächtnisfeier der Auferstehung
 Jesu Christi, der nach dem Neuen Testament (NT) als Sohn Gottes den Tod
 überwunden hat.
 Da Jesu Tod und Auferstehung laut NT in eine Pessach-Woche fielen, bestimmt
 der Termin dieses beweglichen jüdischen Hauptfestes auch das Osterdatum.
 Es wird über einen Lunisolarkalender bestimmt und fällt in der Westkirche
 immer auf den Sonntag nach dem ersten Frühlingsvollmond, im gregorianischen
 Kalender also frühestens auf den 22.
 März und spätestens auf den 25.
 April.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{https://de.wikipedia.org/wiki/Ostern}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Für Berechnung des Datums des Ostersonntags in den Jahren 1900 bis 2099
 hat T.
 O'Beirne folgenden Algorithmus entwickelt:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithmic}
\end_layout

\begin_layout Plain Layout


\backslash
State Gib aus: "Bitte Jahreszahl eingeben.";
\end_layout

\begin_layout Plain Layout


\backslash
State Lies natürliche Zahl $y$ ein;
\end_layout

\begin_layout Plain Layout


\backslash
State $a:=(y-1900) mod 19$;
\end_layout

\begin_layout Plain Layout


\backslash
State $b:=$ ganzzahliger Teil von $(7a+1)/19$;
\end_layout

\begin_layout Plain Layout


\backslash
State $m:=(11a+4-b) mod 29$;
\end_layout

\begin_layout Plain Layout


\backslash
State $q:=$ ganzzahliger Teil von $(y-1900)/4$;
\end_layout

\begin_layout Plain Layout


\backslash
State $w:= (y-1900 +q+31-m) mod 7$;
\end_layout

\begin_layout Plain Layout


\backslash
State $d:= 25-m-w$;
\end_layout

\begin_layout Plain Layout


\backslash
If{$d>0$}
\end_layout

\begin_layout Plain Layout

	
\backslash
State Gib aus: "'Der Ostersonntag im Jahr $y$ ist am $d.$ April";
\end_layout

\begin_layout Plain Layout


\backslash
Else
\end_layout

\begin_layout Plain Layout

	
\backslash
State $d2 = 31+d$;
\end_layout

\begin_layout Plain Layout

	
\backslash
State Gib aus: "'Der Ostersonntag im Jahr $y$ ist am $d2.$ März";
\end_layout

\begin_layout Plain Layout


\backslash
EndIf
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Pseudo-Code Berechnung des Osterdatums}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Ablaufprotokoll
\end_layout

\begin_layout Standard
Erstellen Sie ein Ablaufprotokoll für die Jahre 1817, 1917, 2016, 2017.
 Was fällt Ihnen auf?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Ablaufprotokolle
\end_layout

\begin_layout Standard
Ausgabe: "Bitte Jahreszahl eingeben."
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1817
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1917
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2016
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2017
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
b:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
m:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
q:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
w:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d2:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
–
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ausgabe: 
\begin_inset Quotes pld
\end_inset

Der Ostersonntag im Jahr 1817 ist am 41.
 April.
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
Ausgabe: 
\begin_inset Quotes pld
\end_inset

Der Ostersonntag im Jahr 1917 ist am 8.
 April.
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
Ausgabe: 
\begin_inset Quotes pld
\end_inset

Der Ostersonntag im Jahr 2016 ist am 27.
 März.
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
Ausgabe: 
\begin_inset Quotes pld
\end_inset

Der Ostersonntag im Jahr 2017 ist am 16.
 April.
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Subsubsection*
Was fällt auf?
\end_layout

\begin_layout Standard
Das Jahr 1817 liegt außerhalb des Definitionsbereiches, daher ist die Lösung
 41.
 April falsch.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Java-Programm
\end_layout

\begin_layout Standard
Schreiben Sie das Java-Programm hierfür.
 Fehlerhafte Eingaben sollen abgefangen werden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language=java,numbers=left,tabsize=4,showstringspaces=false,showspaces=fa
lse}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

import java.util.Scanner;
\end_layout

\begin_layout Plain Layout

public class easterdate {
\end_layout

\begin_layout Plain Layout

    public static void main(String[] Args) {
\end_layout

\begin_layout Plain Layout

        System.out.println("Bitte geben Sie die Jahreszahl "+
\end_layout

\begin_layout Plain Layout

            "zur Berechnung des Osterdatums ein:");
\end_layout

\begin_layout Plain Layout

        Scanner sc = new Scanner(System.in);
\end_layout

\begin_layout Plain Layout

        int y = sc.nextInt();
\end_layout

\begin_layout Plain Layout

        sc.close();	
\end_layout

\begin_layout Plain Layout

        if(y < 2100 && y >= 1900) {
\end_layout

\begin_layout Plain Layout

            int a = (y-1900)%19;
\end_layout

\begin_layout Plain Layout

            int b = (7*a+1)/19;
\end_layout

\begin_layout Plain Layout

            int m = (11*a+4-b)%29;
\end_layout

\begin_layout Plain Layout

            int q = (y-1900)/4;
\end_layout

\begin_layout Plain Layout

            int w = (y-1900+q+31-m)%7;
\end_layout

\begin_layout Plain Layout

            int d = 25-m-w;
\end_layout

\begin_layout Plain Layout

            if(d > 0) {
\end_layout

\begin_layout Plain Layout

                System.out.println("Der Ostersonntag im Jahr "
\end_layout

\begin_layout Plain Layout

                    + y + " ist am " + d + ".
 April.");
\end_layout

\begin_layout Plain Layout

            } else {
\end_layout

\begin_layout Plain Layout

                int d2 = 31+d;
\end_layout

\begin_layout Plain Layout

                System.out.println("Der Ostersonntag im Jahr "
\end_layout

\begin_layout Plain Layout

                    + y + " ist am " + d2 + ".
 März.");
\end_layout

\begin_layout Plain Layout

            }
\end_layout

\begin_layout Plain Layout

        } else {
\end_layout

\begin_layout Plain Layout

            System.out.println("Fehlerhafte Eingabe.");
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch Wurzelziehen
status open

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Rekursives Wurzelziehen
\end_layout

\begin_layout Standard
Ein Quadrat mit dem Flächeninhalt 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 hat die Seitenlänge 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a=
\backslash
sqrt{A}$
\end_layout

\end_inset

.
 Aus dieser Tatsache leitet sich folgendes Annäherungsverfahren zum Wurzelziehen
 her.
 Man beginnt mit einem belibigen Rechteck des Flächeninhalts 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A$
\end_layout

\end_inset

 und nähert Schritt für Schritt die Seitenlängen 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a$ und $b$
\end_layout

\end_inset

 aneinander an.
 Das Verfahren bricht ab, wenn der Abstand von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a$ und $b$
\end_layout

\end_inset

 ausreichend klein, das heißt 
\begin_inset Formula $a^{2}\HF A$
\end_inset

 ist.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Schrittfolge in Grafik ist nur beispielhaft
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beispielhaft ist diese Annäherung in folgender Abbildung dargestellt.
 Zunächst hat das Rechteck mit dem Flächeninhalt 
\begin_inset ERT
status open

\begin_layout Plain Layout

$A=9$
\end_layout

\end_inset

 die Seitenlängen 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a=1$ und $b=9$
\end_layout

\end_inset

.
 Im nächsten Schritt folgt die bessere Schätzung 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a=2,25$ und $b=4$
\end_layout

\end_inset

.
 Zum Schluss ist aus dem Rechteck ein Quadrat mit der Seitenlänge 
\begin_inset ERT
status open

\begin_layout Plain Layout

$a=b=3$
\end_layout

\end_inset

 geworden.
 Das Verfahren hat also die Lösung 
\begin_inset ERT
status open

\begin_layout Plain Layout

$
\backslash
sqrt{9}=3$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{5mm}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout


\backslash
filldraw[fill=blue!40!white, draw=black] (0,0) rectangle (4.5,0.5);
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (-0.6,0.25) {$a=1$};
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (2.25,-0.25) {$b=9$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
filldraw[fill=blue!40!white, draw=black] (6.5,0) rectangle (9,1.125);
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (5.7,0.56) {$a=2.25$};
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (7.75,-0.25) {$b=4$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
filldraw[fill=blue!40!white, draw=black] (11,0) rectangle (12.5,1.5);
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (10.4,0.75) {$a=3$};
\end_layout

\begin_layout Plain Layout


\backslash
node[draw=none] at (11.75,-0.25) {$b=3$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Rekursionsvorschrift des Verfahrens lautet:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{n+1}=\frac{1}{2}*(x_{n}+\frac{A}{x_{n}})
\]

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Pseudocode
\end_layout

\begin_layout Standard
Erstellen Sie den Pseudocode zum oben erläuterten Verfahren.
 Die Genauigkeit soll bei fünf Nachkommastellen liegen.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Das Return-Statement in sqrtRek(), ist nur mit dem .
 an der richtigen Stelle, da sich sonst nicht zwei Tabs einfügen lassen.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithmic}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Function{main}{}
\end_layout

\begin_layout Plain Layout

	
\backslash
State Ausgabe: "Bitte geben Sie eine positive Dezimalzahl ein.";
\end_layout

\begin_layout Plain Layout

	
\backslash
State Lies positive Dezimalzahl $A$ ein.;
\end_layout

\begin_layout Plain Layout

	
\backslash
State $a = sqrtRek(1, A)$;
\end_layout

\begin_layout Plain Layout

	
\backslash
State Ausgabe: "Die Wurzel aus $A$ ist $a$.";
\end_layout

\begin_layout Plain Layout


\backslash
EndFunction
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
Function{sqrtRek}{$x_{n}, A$}
\end_layout

\begin_layout Plain Layout

	
\backslash
State $x_{n+1} = (x_{n} + A/x_{n})/2$;
\end_layout

\begin_layout Plain Layout

	
\backslash
If{$| x_{n+1} * x_{n+1} - A | < 0.00001$}
\end_layout

\begin_layout Plain Layout

		
\backslash
State $x_{n+1} = sqrtRek(x_{x+1}, A)$;
\end_layout

\begin_layout Plain Layout

	
\backslash
EndIf
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

	
\backslash
t .
 
\backslash
t 
\backslash
Return $x_{n+1}$;   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
EndFunction
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\begin_layout Plain Layout


\backslash
caption{Pseudo-Code Wurzelziehen}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aufgabe: Java-Programm
\end_layout

\begin_layout Standard
Überführen Sie den Pseudocode in ein lauffähiges Java-Programm.
 Hierbei soll bei jedem Schritt das Zwischenergebnis ausgegeben werden.
\end_layout

\begin_layout Standard
Fehlerhafte Eingaben sollen abgefangen werden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{musterloesung}
\end_layout

\begin_layout Plain Layout


\backslash
lstset{language=java,numbers=left,showstringspaces=false,showspaces=false}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

import java.util.Scanner;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public class wurzelziehen { 
\end_layout

\begin_layout Plain Layout

  public static void main(String[] args) { 
\end_layout

\begin_layout Plain Layout

    System.out.println("Bitte geben Sie eine"+
\end_layout

\begin_layout Plain Layout

      "positive Dezimalzahl ein."); 
\end_layout

\begin_layout Plain Layout

    Scanner sc = new Scanner(System.in); 
\end_layout

\begin_layout Plain Layout

    double A = sc.nextDouble(); 
\end_layout

\begin_layout Plain Layout

    sc.close(); 
\end_layout

\begin_layout Plain Layout

    if(A > 0) { 
\end_layout

\begin_layout Plain Layout

    double a = wurzelRek(1,A); 
\end_layout

\begin_layout Plain Layout

    System.out.println("Die Wurzel aus " + A + 
\end_layout

\begin_layout Plain Layout

      " ist " + a + ".");
\end_layout

\begin_layout Plain Layout

    } else { 
\end_layout

\begin_layout Plain Layout

      System.out.println("Fehlerhafte Eingabe."); 
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

  } 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  public static double wurzelRek(double xN, double A) {
\end_layout

\begin_layout Plain Layout

    double xNplus1 = (xN + A/xN)/2; 
\end_layout

\begin_layout Plain Layout

    System.out.println(xNplus1);
\end_layout

\begin_layout Plain Layout

    if(Math.abs(xNplus1 * xNplus1 - A)> 0.00001) {
\end_layout

\begin_layout Plain Layout

      xNplus1 = wurzelRek(xNplus1, A);
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return xNplus1; 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{musterloesung}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
